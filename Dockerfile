# ----------------------------------------------------
# 1. FASE DE BUILD (Cria√ß√£o da Imagem e Compila√ß√£o)
# ----------------------------------------------------
# Usamos o node 20-alpine para ter um ambiente pequeno
FROM node:20-alpine AS builder

# Define o diret√≥rio de trabalho dentro do container
WORKDIR /usr/src/app

# Copia e instala depend√™ncias de produ√ß√£o e desenvolvimento
COPY package*.json ./
# O 'npm ci' √© mais r√°pido e garante que a vers√£o correta seja usada
RUN npm ci

# Copia o restante dos arquivos (c√≥digo fonte .ts)
COPY . .

# Executa o build (compila TypeScript para JavaScript na pasta 'dist')
# üö® ESTE PASSO GERA O 'dist/main.js' QUE ESTAVA FALTANDO
RUN npm run build

# ----------------------------------------------------
# 2. FASE DE PRODU√á√ÉO (Imagem Final Enxuta e Segura)
# ----------------------------------------------------
# Usamos uma imagem base leve (apenas para execu√ß√£o)
FROM node:20-alpine AS production

# Define o diret√≥rio de trabalho
WORKDIR /usr/src/app

# Copia APENAS as depend√™ncias de PRODU√á√ÉO e as instala
COPY package*.json ./
RUN npm install --only=production

# Copia a pasta 'dist' (o c√≥digo compilado) da fase de 'builder'
# üö® ISSO RESOLVE O "Cannot find module '/src/main.js'"
COPY --from=builder /usr/src/app/dist ./dist

# Comando para rodar a aplica√ß√£o
# üö® COMANDO DE START CORRETO: Aponta para o arquivo .js na pasta 'dist'
CMD ["node", "dist/main.js"]